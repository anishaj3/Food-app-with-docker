{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.service.ts","webpack:///./src/app/modules/authentication/authentication.module.ts","webpack:///./src/app/modules/authentication/authentication.router.module.ts","webpack:///./src/app/modules/authentication/authentication.service.ts","webpack:///./src/app/modules/authentication/login/login.component.css","webpack:///./src/app/modules/authentication/login/login.component.html","webpack:///./src/app/modules/authentication/login/login.component.ts","webpack:///./src/app/modules/authentication/register/register.component.css","webpack:///./src/app/modules/authentication/register/register.component.html","webpack:///./src/app/modules/authentication/register/register.component.ts","webpack:///./src/app/modules/authentication/user.ts","webpack:///./src/app/modules/nutrition/components/container/container.component.css","webpack:///./src/app/modules/nutrition/components/container/container.component.html","webpack:///./src/app/modules/nutrition/components/container/container.component.ts","webpack:///./src/app/modules/nutrition/components/details-page/details-page.component.css","webpack:///./src/app/modules/nutrition/components/details-page/details-page.component.html","webpack:///./src/app/modules/nutrition/components/details-page/details-page.component.ts","webpack:///./src/app/modules/nutrition/components/favourites/favourites.component.css","webpack:///./src/app/modules/nutrition/components/favourites/favourites.component.html","webpack:///./src/app/modules/nutrition/components/favourites/favourites.component.ts","webpack:///./src/app/modules/nutrition/components/nutrition-info/nutrition-info.component.css","webpack:///./src/app/modules/nutrition/components/nutrition-info/nutrition-info.component.html","webpack:///./src/app/modules/nutrition/components/nutrition-info/nutrition-info.component.ts","webpack:///./src/app/modules/nutrition/components/search/search.component.css","webpack:///./src/app/modules/nutrition/components/search/search.component.html","webpack:///./src/app/modules/nutrition/components/search/search.component.ts","webpack:///./src/app/modules/nutrition/components/thumbnail/thumbnail.component.css","webpack:///./src/app/modules/nutrition/components/thumbnail/thumbnail.component.html","webpack:///./src/app/modules/nutrition/components/thumbnail/thumbnail.component.ts","webpack:///./src/app/modules/nutrition/interceptor.service.ts","webpack:///./src/app/modules/nutrition/nutrition.module.ts","webpack:///./src/app/modules/nutrition/nutrition.router.module.ts","webpack:///./src/app/modules/nutrition/nutrition.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>{{ title }}</span>\\n  <button class = 'search-button' mat-button [routerLink]=\\\"['/food/search']\\\">Search</button>\\n  <button mat-button [routerLink]=\\\"['/food/favourite']\\\">Favourite</button>\\n  <button mat-button (click)=\\\"logout()\\\">Logout</button>\\n</mat-toolbar>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { AuthenticationService } from './modules/authentication/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'NutritionistUI';\n\n  constructor(private authService: AuthenticationService, private router: Router) {\n\n  }\n\n  logout() {\n    this.authService.deleteToken();\n    this.router.navigate(['user/login']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes, Router } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { NutritionModule } from './modules/nutrition/nutrition.module';\nimport { AuthenticationModule } from './modules/authentication/authentication.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { AuthGuard } from './auth.guard.service';\nimport { MatFormFieldModule, MatSelectModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\n\nconst appRoutes: Routes = [ \n  {\n      path: '',\n      redirectTo: 'user',\n      pathMatch: 'full'\n  } \n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NutritionModule,    \n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    FormsModule,\n    MatInputModule,\n    AuthenticationModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    CommonModule \n  ],\n  providers: [\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from './modules/authentication/authentication.service';\n\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router,private authenticationService: AuthenticationService) { \n\n    }\n\n    canActivate(){\n        if(!this.authenticationService.isTokenExpired()) {\n            return true;\n        }\n        this.router.navigate(['user/login']);\n        return false;\n    }\n   \n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthenticationRouterModule } from './authentication.router.module';\nimport { AuthenticationService } from './authentication.service';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { MatSelectModule, MatFormFieldModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthenticationRouterModule, \n    MatButtonModule, \n    MatCardModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatDialogModule,\n    FormsModule,\n    MatFormFieldModule,\n    CommonModule\n  ],\n  declarations: \n  [\n    RegisterComponent,\n    LoginComponent    \n  ],\n  providers: [\n    AuthenticationService\n  ],\n  exports: [\n    RegisterComponent,\n    LoginComponent\n  ]\n})\nexport class AuthenticationModule { }\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\nconst userRoutes: Routes = [\n    {\n        path: 'user',\n        children: [       \n            {\n                path: '',\n                redirectTo: 'login',\n                pathMatch: 'full'\n            },    \n            {\n                path: 'register',\n                component: RegisterComponent,                \n            },\n            {\n                path: 'login',\n                component: LoginComponent,                \n            }\n        ] \n    }\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(userRoutes),      \n    ],\n    exports: [\n        RouterModule\n    ]\n})\n\nexport class AuthenticationRouterModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  userEndpoint: string;\n  token: string;\n\n  constructor(private http: HttpClient) { \n    this.userEndpoint='http://localhost:8089/api/v1/user'\n   } \n  \n\n  registerUser(user) {\n    const registerUrl = `${this.userEndpoint}/register`; \n    return this.http.post(registerUrl, user,{responseType: 'text'});\n  }\n\n  loginUser(user) {\n    const loginUrl = `${this.userEndpoint}/login`; \n    return this.http.post(loginUrl, user);\n  }\n\n  setToken(token: string) {\n    return localStorage.setItem(\"jwt_token\",token);\n  }\n\n  getToken() {\n    console.log('Fetching token');\n    return localStorage.getItem(\"jwt_token\");\n  }\n\n  deleteToken() {\n    return localStorage.removeItem(\"jwt_token\");\n  }\n\n  isTokenExpired(token?: string) {\n    if(!token) token = this.getToken();\n    if(!token) return true;\n    const date = this.getTokenExpirationDate(token);\n    if(date === undefined || date ===null) return false;\n    return !(date.valueOf() > new Date().valueOf());\n  }\n\n  getTokenExpirationDate(token: string) {\n    const decoded = jwt_decode(token);\n    if(decoded.exp === undefined) return null;\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n    return date;\n  }\n\n}\n","module.exports = \".register-container {\\n    width: 400px;\\n    margin-top: 50px;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\\n.register-header {\\n    font-size: 20px;\\n}\"","module.exports = \"\\n\\n<div class=\\\"register-container\\\">\\n    <form class=\\\"register-form\\\" #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"loginUser()\\\">\\n<mat-card class=\\\"register-card\\\">\\n  <mat-card-header >       \\n      <mat-card-title class=\\\"register-header\\\">Login</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content class=\\\"register-overview\\\">     \\n      <mat-form-field>\\n          <input matInput placeholder=\\\"User Id\\\" [(ngModel)]=\\\"newUser.userId\\\" name=\\\"userId\\\" class=\\\"userId\\\">      \\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput type=\\\"password\\\" placeholder=\\\"password\\\" [(ngModel)]=\\\"newUser.password\\\" name=\\\"password\\\" class=\\\"password\\\">      \\n        </mat-form-field>\\n  </mat-card-content>\\n  <mat-card-actions class=\\\"food-actions\\\">\\n      <button  mat-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"loginButton\\\">Login</button>\\n      <button  mat-button color=\\\"primary\\\" [routerLink]=\\\"['/user/register']\\\" class=\\\"registerButton\\\"> Register</button>\\n  </mat-card-actions>\\n</mat-card>\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { user } from './../user';\nimport { AuthenticationService } from './../authentication.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  newUser: user;\n\n  constructor(private authenticatinService: AuthenticationService, private router: Router) { \n    this.newUser = new user();\n  }\n\n  ngOnInit() {\n  }\n\n  loginUser() {\n    console.log(\"New User: \" + JSON.stringify(this.newUser));   \n    this.authenticatinService.loginUser(this.newUser)\n      .subscribe((data) => {\n        console.log(data);\n        this.authenticatinService.setToken(data['token']);\n        this.router.navigate(['/food/search']);\n      });\n  }\n\n}\n","module.exports = \".register-container {\\n    width: 400px;\\n    margin-top: 50px;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\\n.register-header {\\n    font-size: 20px;\\n}\"","module.exports = \"\\n\\n<div class=\\\"register-container\\\">\\n    <form class=\\\"register-form\\\" #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"registerUser()\\\">\\n<mat-card class=\\\"register-card\\\">\\n  <mat-card-header >       \\n      <mat-card-title class=\\\"register-header\\\">Register user</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content class=\\\"register-overview\\\">\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Firstname\\\" [(ngModel)]=\\\"newUser.firstname\\\" name=\\\"firstname\\\" class=\\\"firstname\\\">      \\n        </mat-form-field>\\n    <mat-form-field>\\n        <input matInput placeholder=\\\"Lastname\\\" [(ngModel)]=\\\"newUser.lastname\\\" name=\\\"lastname\\\" class=\\\"lastname\\\">      \\n      </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"User Id\\\" [(ngModel)]=\\\"newUser.userId\\\" name=\\\"user_id\\\" class=\\\"user_id\\\">      \\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput type=\\\"password\\\" placeholder=\\\"password\\\" [(ngModel)]=\\\"newUser.password\\\" name=\\\"password\\\" class=\\\"password\\\">      \\n    </mat-form-field>\\n    \\n  </mat-card-content>\\n  <mat-card-actions class=\\\"food-actions\\\">\\n      <button class=\\\"registerButton\\\" mat-button color=\\\"primary\\\" type=\\\"submit\\\" >Register</button>\\n  </mat-card-actions>\\n</mat-card>\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { user } from './../user';\nimport { AuthenticationService } from './../authentication.service';\nimport { Router } from '@angular/router'\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  newUser: user;\n\n  constructor(private authenticatinService: AuthenticationService, private router: Router) { \n    this.newUser = new user();\n  }\n\n  ngOnInit() {\n  }\n\n  registerUser() {\n    console.log(\"New User: \" + JSON.stringify(this.newUser));   \n    this.authenticatinService.registerUser(this.newUser)\n      .subscribe((data) => {\n        console.log(data);\n        this.router.navigate(['user/login']);\n      });\n  }\n\n}\n","export class user {\n    firstname: string;\n    lastname: string;\n    userId: string;\n    password: string;\n\n}","module.exports = \".food-container {\\n    margin:auto 0px;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n            flex-direction: row;\\n    flex-wrap: wrap;\\n}\"","module.exports = \"<h4>{{header}}</h4>\\n<div class=\\\"food-container\\\">\\n    <food-thumbnail *ngFor=\\\"let item of items\\\" [item]=\\\"item\\\" [watchlist]=\\\"watchlist\\\"\\n    (addFood)=\\\"addToFavourites($event)\\\"\\n    (deleteFood)=\\\"deleteFromFavourites($event)\\\"\\n    (showDetails)=\\\"itemButtonClicked($event)\\\"></food-thumbnail>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NutritionService } from './../../nutrition.service';\nimport{ FoodItem, FoodReport, FoodNutrient } from '../../nutrition';\nimport {ActivatedRoute} from \"@angular/router\";\n\n\n@Component({\n  selector: 'food-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\n\nexport class ContainerComponent implements OnInit {\n\n\n  @Input()items: Array<FoodItem>;\n  @Input()food: Array<FoodNutrient>;\n\n\n  @Input()\n  header: string;\n\n  @Input()\n  watchlist: boolean;\n\n  foodReport: FoodReport;\n\n  constructor(private nutritionService: NutritionService, private snackBar: MatSnackBar,private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n  }\n\n  addToFavourites(items) {\n    this.nutritionService.addFoodToFavourites(items)\n    .subscribe((data) => {\n      this.snackBar.open(\"Food Added to favourites\",\"\",{\n        duration:2000\n      })\n    });\n  }\n\n  itemButtonClicked(items){\n     this.nutritionService.getFoodDetails(items\n      ).subscribe(foodReports => {\n        this.foodReport = foodReports[0];\n      });\n  }\n\n  deleteFromFavourites(item) {\n    let foodIndex = this.items.findIndex((mv) => {\n      return mv.ndbno === item.ndbno;\n    });\n\n    this.items.splice(foodIndex,1);\n\n    this.nutritionService.deleteFoodFromFavourites(item)\n    .subscribe((data) => {\n      this.snackBar.open(\"Food deleted from favourites\",\"\",{\n        duration:2000\n      })\n    });\n  }\n\n}\n\n","module.exports = \".food-thumbnail {\\n    width: 200px;\\n    margin: 10px;\\n    padding-top:15px;\\n    height: 200px;\\n}\\n\\n.food-overview {\\n    width: 100%;\\n    height: 50px;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    height: 200px;\\n}\\n\\n.food-overview::-webkit-scrollbar {\\n    width: 3px;\\n    background: #D3d3d3;\\n}\\n\\n.food-actions {\\n    text-align: right;\\n}\\n\\n.food-image {\\n    height: 300px;\\n}\\n\\n.food-header {\\n    padding: 0px;\\n    margin-left: -10px;\\n    margin-right: -10px;\\n    margin-bottom: -5px;\\n}\\n\\n.food-container {\\n    margin:auto 0px;\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n            flex-direction: row;\\n    flex-wrap: wrap;\\n}\"","module.exports = \"\\n     <nutrient-thumbnail [foodNutrients]=\\\"foodNutrients\\\"></nutrient-thumbnail>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NutritionService} from \"../../nutrition.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport { MatDialog } from '@angular/material';\nimport {FoodNutrient} from \"../../nutrition\";\n\n@Component({\n  selector: 'food-search',\n  templateUrl: 'details-page.component.html',\n  styleUrls: [\n    'details-page.component.css'\n  ]\n})\nexport class DetailsPageComponent implements OnInit {\n\n  foodNutrients: FoodNutrient[];\n\n  constructor(private nutritionService: NutritionService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n\n      this.nutritionService.getFoodDetails(\n        params[this.nutritionService.paramNDBNO]\n      ).subscribe(foodReports => {\n\n        this.foodNutrients = foodReports[0].foodNutrients; // only one on details page\n      });\n    });\n  }\n}\n\n\n","module.exports = \"\"","module.exports = \"<food-container [items]=\\\"items\\\" [header]=\\\"header\\\" [watchlist]=\\\"watchlist\\\"></food-container>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NutritionService} from './../../nutrition.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FoodItem , FoodReport} from '../../nutrition';\n\n@Component({\n  selector: 'food-favourite',\n  templateUrl: './favourites.component.html',\n  styleUrls: ['./favourites.component.css']\n})\nexport class FavouritesComponent implements OnInit {\n\n  \n  items: Array<FoodItem>;\n  header: string;\n  watchlist = true;\n  foodReport: FoodReport;\n\n  constructor(private nutritionService: NutritionService, private route: ActivatedRoute) { \n    this.items = [];\n    this.route.data.subscribe(data => {   \n     this.header = data.header;\n    });\n  }\n\n  ngOnInit() {\n    this.nutritionService.getFoodFromFavourites()\n     .subscribe((items) => {\n       this.items.push(...items);\n     });\n    }\n  }\n  ","module.exports = \"\\n.food-thumbnail {\\n    width: 200px;\\n    margin: 10px;\\n    padding-top: 15px;\\n    height: 150px;\\n}\"","module.exports = \"\\n<mat-card *ngFor=\\\"let nutrient of foodNutrients\\\" class=\\\"food-thumbnail\\\">\\n    <mat-card-header class=\\\"food-header\\\">       \\n        <mat-card-title >{{nutrient.name}}</mat-card-title>\\n        <mat-card-title>{{nutrient.nutrientId}}</mat-card-title>\\n        <mat-card-title>{{nutrient.group}}</mat-card-title>\\n        <mat-card-title>{{nutrient.unit}}</mat-card-title>\\n        <mat-card-title>{{nutrient.value}}</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-actions class=\\\"food-actions\\\">\\n    </mat-card-actions>\\n</mat-card>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport { FoodNutrient } from '../../nutrition';\n\n@Component({\n  selector: 'nutrient-thumbnail',\n  templateUrl: 'nutrition-info.component.html',\n  styleUrls: [\n    'nutrition-info.component.css'\n  ]\n})\nexport class NutritionInfoComponent implements OnInit {\n\n  @Input() foodNutrients: FoodNutrient[];\n\n  constructor() { }\n\n  ngOnInit() {\n\n    console.log('test', this.foodNutrients);\n  }\n\n}\n","module.exports = \".searchbar {\\n    font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n    margin: 10px;\\n}\"","module.exports = \"<div class=\\\"searchbar\\\">\\n  <mat-form-field>\\n    <input id =\\\"search-button-input\\\" matInput type=\\\"text\\\" name=\\\"search\\\" #box (keyup.enter)=\\\"onSearch(box.value)\\\">\\n    <mat-placeholder>Search</mat-placeholder>\\n  </mat-form-field>\\n</div>\\n  <food-container [items]=\\\"items\\\" [header]=\\\"header\\\"></food-container>\\n  \\n   \"","import { Component, OnInit,EventEmitter ,Output} from '@angular/core';\nimport {FoodItem} from '../../nutrition';\nimport { NutritionService } from '../../nutrition.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n\n@Component({\n  selector: 'food-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  \n  \n  header: string;\n  searchText = '';\n  items: FoodItem[];\n  // Subject to be passed to paginated list so the list knows when\n  //  the total number of items has changed and what the new value is\n  totalItems$ = new BehaviorSubject<number>(0);\n  pageSize = 15;\n  constructor(private nutritionService: NutritionService,private route: ActivatedRoute) {\n    this.route.data.subscribe(data => {   \n      this.header = data.header;\n    });\n   }\n\n  ngOnInit() {\n  }\n  onSearch(searchText: string) {\n    this.searchText = searchText;\n    this.performFoodSearch();\n  }\n  private performFoodSearch() {\n    this.nutritionService.getFoodList(this.searchText, 0, this.pageSize).subscribe(result => {\n      this.items = result.items;\n      console.log(this.items);\n      this.totalItems$.next(result.total);\n    });\n  }\n}\n","module.exports = \".food-thumbnail {\\n    width: 200px;\\n    margin: 10px;\\n    padding-top:15px;\\n    height: 200px;\\n}\\n\\n.food-overview {\\n    width: 100%;\\n    height: 50px;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    height: 200px;\\n}\\n\\n.food-overview::-webkit-scrollbar {\\n    width: 3px;\\n    background: #D3d3d3;\\n}\\n\\n.food-actions {\\n    text-align: right;\\n}\\n\\n.food-image {\\n    height: 300px;\\n}\\n\\n.food-header {\\n    padding: 0px;\\n    margin-left: -10px;\\n    margin-right: -10px;\\n    margin-bottom: -5px;\\n}\\n\"","module.exports = \"<mat-card class=\\\"food-thumbnail\\\">\\n    <mat-card-header class=\\\"food-header\\\">\\n        <mat-card-title class=\\\"food-title\\\">{{item?.foodGroup}}</mat-card-title>\\n        <mat-card-title>{{item?.name}}</mat-card-title>\\n        <mat-card-title>{{item?.ndbno}}</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-actions class=\\\"food-actions\\\">\\n        <button *ngIf=\\\"!watchlist\\\" mat-button color=\\\"primary\\\" (click)=\\\"addToFavourites()\\\">Add to favourite</button>\\n        <button *ngIf=\\\"!watchlist\\\"mat-button color=\\\"primary\\\"[routerLink]=\\\"['food-details',item.ndbno]\\\">Details</button>\\n        <button *ngIf=\\\"watchlist\\\" mat-button color=\\\"primary\\\" (click)=\\\"deleteFromFavourites()\\\">Delete</button>\\n    </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { FoodItem, ReportResponseFoodDesc, ReportResponseFoodNutrient, FoodNutrient } from '../../nutrition';\n\n@Component({\n  selector: 'food-thumbnail',\n  templateUrl: './thumbnail.component.html',\n  styleUrls: ['./thumbnail.component.css']\n})\n\nexport class ThumbnailComponent implements OnInit {\n\n  @Input()\n  item: FoodItem;\n\n  @Input()\n  food: FoodNutrient;\n\n  @Input()\n  watchlist: boolean;\n\n  @Output()\n  addFood = new EventEmitter;\n\n  @Output()\n  deleteFood = new EventEmitter;\n\n  @Output()\n  showDetail= new EventEmitter;\n\n  @Input()buttonLabel: string;\n\n  @Output()\n  showDetails = new EventEmitter;\n\n  comments: string;\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit() { }\n\n  addToFavourites() {\n    console.log(this.item);\n    this.addFood.emit(this.item);\n  }\n\n  deleteFromFavourites() {\n    this.deleteFood.emit(this.item);\n  }\n\n  itemButtonClicked(item: FoodItem) {\n    console.log(this.item.ndbno);\n    this.showDetails.emit(this.item.ndbno);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { \n    HttpClient,\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor,\n    HttpResponse\n} from '@angular/common/http';\nimport { map, retry } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n    constructor(private authenticationService: AuthenticationService) { \n  \n   }\n\n   intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        console.log('Intercepting');\n        request = request.clone({\n            setHeaders: {\n                Authorization: `Bearer ${this.authenticationService.getToken()}`\n            }\n        });\n        console.log(request);\n        return next.handle(request);\n    }\n  \n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NutritionService } from './nutrition.service';\nimport { ContainerComponent } from './components/container/container.component';\nimport { NutritionRouterModule } from './nutrition.router.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { SearchComponent } from './components/search/search.component';\nimport { TokenInterceptor } from './interceptor.service';\nimport { NutritionInfoComponent } from './components/nutrition-info/nutrition-info.component';\nimport { DetailsPageComponent } from './components/details-page/details-page.component';\nimport { MatSelectModule, MatFormFieldModule } from '@angular/material';\nimport {FavouritesComponent} from './components/favourites/favourites.component';\n//import { DetailsPageComponent} from './components/details-page/details-page.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    NutritionRouterModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatInputModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    CommonModule\n  ],\n  declarations: [\n    ThumbnailComponent,\n    ContainerComponent,\n    FavouritesComponent,\n    SearchComponent,\n    NutritionInfoComponent,\n    DetailsPageComponent,\n  ],\n  exports: [\n    ThumbnailComponent,\n    NutritionRouterModule,   \n    SearchComponent,\n    DetailsPageComponent,\n    NutritionInfoComponent,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  providers: [\n    NutritionService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n})\nexport class NutritionModule { }\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { FavouritesComponent } from './components/favourites/favourites.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { AuthGuard } from '../../auth.guard.service';\n//import { DetailsPageComponent } from './components/details-page/details-page.component';\nimport { DetailsPageComponent } from './components/details-page/details-page.component';\n\nconst foodRoutes: Routes = [\n    {\n        path: 'food',\n        children: [\n            {\n                path: 'favourite',\n                component: FavouritesComponent,\n                canActivate: [AuthGuard],\n                data: {\n                    foodType: 'watchlist',\n                    header: 'Favourite'\n                }\n            },\n            {\n                path: 'search',\n                component: SearchComponent,\n                canActivate: [AuthGuard],\n                data: {\n                    foodType: 'search',\n                    header: 'Search Food'\n                }\n            },\n             {\n                path: 'search/food-details/:ndbno',\n               component: DetailsPageComponent,\n                canActivate: [AuthGuard],\n                data: {\n                    foodType: 'search',\n                    header: 'Search Food'\n                }\n            }\n        ] \n    }\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(foodRoutes),      \n    ],\n    exports: [\n        RouterModule\n    ]\n})\n\nexport class NutritionRouterModule { }","import { Injectable } from '@angular/core';\n//import { HttpClient } from '@angular/common/http';\nimport { map, retry } from 'rxjs/operators';\nimport {SearchResponse, FoodItem, FoodReport, ReportResponse} from './nutrition';\nimport {SearchResponseItem} from './nutrition';\nimport{SearchResult} from './nutrition';\nimport { Observable } from 'rxjs/Observable';\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NutritionService {\n\n  \n  apiKey: string;\n  page: string;\n  foodEndpoint: string;\n  format: string;\n  foodSearchUrl: string;\n  foodReportUrl: string;\n  paramApiKey: string;\n  paramFormat: string;\n  paramQuery: string;\n  paramMax: string;\n  paramOffset: string;\n  paramNDBNO: string;\n  paramType: string;\n  httpClient: any;\n\n\n  constructor(private http: HttpClient) { \n    this.page = '1';\n    this.foodEndpoint='http://localhost:8082/api/v1/food';\n    this.apiKey = '0eSJ5Bwjti3Ck1Yvj3Nk9xkwuQtuaaK7xcw9zYv1';\n    this.format = 'json';\n    this.foodSearchUrl= 'https://api.nal.usda.gov/ndb/search';\n    this.foodReportUrl='https://api.nal.usda.gov/ndb/V2/reports';\n    this.paramApiKey = 'api_key';\n    this.paramFormat= 'format';\n    this.paramQuery= 'q';\n    this.paramMax ='max';\n    this.paramOffset= 'offset';\n    this.paramNDBNO= 'ndbno';\n    this.paramType= 'type';\n\n   }\n  getFoodList = (searchQuery: string, offset: number, max: number): Observable<SearchResult> => {\n\n    let params = new HttpParams();\n    params = params.append(this.paramApiKey, this.apiKey);\n    params = params.append(this.paramFormat, this.format);\n    params = params.append(this.paramQuery, searchQuery);\n    params = params.append(this.paramMax, max.toString());\n    params = params.append(this.paramOffset, offset.toString());\n\n    return this.http.get(this.foodSearchUrl, {\n      params: params\n    }).pipe(map((res: SearchResponse) => {\n\n      return {\n        start: res.list.start,\n        end: res.list.end,\n        total: res.list.total,\n        items: itemsMap(res.list.item)\n      };\n  function itemsMap(inItems: SearchResponseItem[]) {\n\n    return inItems.map(inItem => {\n\n      return {\n        foodGroup: inItem.group,\n        name: inItem.name,\n        ndbno: inItem.ndbno\n      }\n    });\n  }\n}));\n}\n  addFoodToFavourites(item) {\n    return this.http.post(this.foodEndpoint,item);\n  }\n\n  getFoodFromFavourites(): Observable<Array<FoodItem>> {\n    return this.http.get<Array<FoodItem>>(this.foodEndpoint);\n  }\n\n  deleteFoodFromFavourites(item: FoodItem){\n    const deleteEndpoint = `${this.foodEndpoint}/${item.ndbno}`;\n    console.log(item.ndbno);\n    return this.http.delete(deleteEndpoint,{responseType: 'text'});\n  }\n  getFoodDetails = (ndbnoList: string): Observable<FoodReport[]> => {\n\n    let params = new HttpParams();\n    params = params.append(this.paramApiKey, this.apiKey);\n    params = params.append(this.paramFormat, this.format);\n    params = params.append(this.paramType, 'b');\n    params =  params.append(this.paramNDBNO,ndbnoList);\n\n    return this.http.get(this.foodReportUrl, {\n      params: params\n    }).pipe(map((inItem: ReportResponse) => {\n\n      return inItem.foods.map(value => {\n\n        let foodReport: FoodReport = {\n          ndbno: value.food.desc.ndbno,\n          name: value.food.desc.name,\n          foodNutrients: null // added below\n        };\n\n        foodReport.foodNutrients = value.food.nutrients.map(nutrient => {\n\n          return {\n            nutrientId: nutrient.nutrient_id,\n            name: nutrient.name,\n            group: nutrient.group,\n            unit: nutrient.unit,\n            value: nutrient.value\n          }\n        });\n\n        return foodReport;\n      });\n    }));\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}